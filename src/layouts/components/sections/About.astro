---
import { markdownify } from "@/lib/utils/textConverter";
import { Image } from "astro:assets";
const { about } = Astro.props;
const { title, secondTitle, sideText, description, image_group, main_images } =
  about;

// Fix-Later-1: markdownify returning <br> text instead of new line
const descriptionArray = description.split("\n");

console.log(about);
---

<section
  class="section banner px-10 flex font-montserrat gap-10 justify-center"
  style="background-color: #f5f4fe;"
>
  <div
    class="side-text text-primary text-5xl font-light scale-x-[-1] scale-y-[-1] font-montserrat text-end"
  >
    {markdownify(sideText)}
  </div>
  <!-- Fix-Later: remove max-width and adjust the layout for small and big screen -->
  <div class="flex flex-col gap-[3.5rem] max-w-[1045px]">
    <div class="text-center">
      <h1
        class="text-transparent bg-clip-text bg-gradient-to-br from-[#F71B35] to-[#FFFAC3] text-[10rem] leading-none font-montserrat font-extrabold"
      >
        {markdownify(title)}
      </h1>
      <p
        class="secont-title mt-[-50px] text-[#3B3A39] font-extrabold leading-none text-[3.3rem]"
      >
        {markdownify(secondTitle)}
      </p>
    </div>
    <div class="content grid grid-cols-[1fr_250px] gap-10">
      <div class="flex flex-col gap-10">
        <div class="description">
          <!-- Fix-Later-1: markdownify returning <br> text instead of new line -->
          {
            descriptionArray.map((desc: string, index: number) =>
              index === 0 ? (
                <p class="text-[#464242] m-0">{desc}</p>
              ) : (
                <p class="text-[#464242] m-0 mt-2">{desc}</p>
              ),
            )
          }
        </div>
        <div class="image-group-bottom flex items-center gap-14">
          <div class="image-group grid grid-cols-3 gap-5 w-fit flex-grow max-w-[470px]">
            {
              image_group.map((image: any) => (
                <div class="image-wrapper flex">
                  <Image
                    src={image.image}
                    class="object-cover object-center m-0 flex-grow rounded-xl aspect-[16/11]"
                    alt="image"
                    width={100}
                    height={70}
                  />
                </div>
              ))
            }
          </div>
          <div class="relative ml-auto main-img-wrapper">
            <Image
              src={main_images[0].image}
              class="main-img object-cover object-center m-0 h-[200px] rounded-2xl"
              alt="image"
              width={250}
              height={200}
            />
            <Image
              src={main_images[0].badge}
              class="badge-img object-cover object-center m-0 h-[50px] absolute top-0 mx-auto left-0 right-0 translate-y-[-50%]"
              alt="image"
              width={70}
              height={50}
            />
          </div>
        </div>
      </div>
      <div class="flex flex-col justify-center gap-10">
        {
          main_images.map(
            (image: any, index: number) =>
              index !== 0 && (
                <div class="image-main relative w-fit main-img-wrapper">
                  <Image
                    src={image.image}
                    class="main-img marker:object-cover object-center m-0 h-[200px] rounded-2xl"
                    alt="image"
                    width={250}
                    height={200}
                  />
                  <Image
                    src={image.badge}
                    class="badge-img object-cover object-center m-0 h-[50px] absolute top-0 mx-auto left-0 right-0 translate-y-[-50%]"
                    alt="image"
                    width={70}
                    height={50}
                  />
                </div>
              ),
          )
        }
      </div>
    </div>
  </div>
</section>

<style>
  .side-text {
    writing-mode: vertical-rl;
  }

  .main-img-wrapper {
    position: relative;
  }

  .main-img-wrapper::before {
    position: absolute;
    content: "";
    border: 1px solid #F71B35;
    border-radius: 1rem;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    transform: rotate(-3.67deg) translate(-10px, 10px);
    z-index: 1;
  }
  .main-img-wrapper::after {
    position: absolute;
    content: "";
    border: 1px solid #F71B35;
    border-radius: 1rem;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    transform: rotate(3.67deg) translate(-7.5px, 15px);
    z-index: 1;
  }

  .badge-img {
    z-index: 3;
  }
  .main-img {
    position: relative;
    min-width: 250px;
    z-index: 2;
  }
</style>
